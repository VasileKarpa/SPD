services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  api1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api1
    volumes:
      - ./frontend:/srv/frontend
      - ./backend/app/openapi.yaml:/srv/app/openapi.yaml:ro
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  api2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api2
    volumes:
      - ./frontend:/srv/frontend
      - ./backend/app/openapi.yaml:/srv/app/openapi.yaml:ro
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    command: python consumer.py
    container_name: consumer
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2

volumes:
  db-data:
