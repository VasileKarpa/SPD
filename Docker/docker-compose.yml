version: "3.8"

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api1
      - api2

  api1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api1
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
    depends_on:
      - db
      - redis
      - rabbitmq

  api2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api2
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
    depends_on:
      - db
      - redis
      - rabbitmq

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    command: python consumer.py
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bd_spd
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  db-data:
